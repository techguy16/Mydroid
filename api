#!/bin/bash

export adb_code=$(adb devices -l | sed -n 2p | awk '{print $1}')
export getprop=$(adb -s "$adb_code" shell getprop)

phone_connection_state() {
    if [[ "$adb_code" != "" ]]; then
        echo "Connected"
    else
        echo "Not Connected"
    fi
}

phone_type() {
    type=$(echo "$getprop" | grep ro.product.model | awk -F': ' '{print $2}' | sed -e 's/^.//' -e 's/.$//')
    if [[ "$type" == "SM-"* ]]; then
        echo "Samsung Galaxy $(echo $type | sed 's/SM-//')"
    else
        echo "$type"
    fi
}

get_device_name() {
    adb -s "$adb_code" shell settings get global device_name
}

screen_mirror() {
    scrcpy --window-title="$(get_device_name)"
}

sim_information() {
    operator1=""
    operator2="" # some phones have dual-SIMs

    operatorlist=$(echo "$getprop" | grep gsm.operator.alpha | awk -F': ' '{print $2}' | sed -e 's/^.//' -e 's/.$//')
    operator1+="<b>SIM 1:</b>\nOperator: $(echo "$operatorlist" | awk -F',' '{print $1}')"
    if [[ "$operatorlist" == *","* ]]; then operator2+="\n\n<b>SIM 2:</b>\nOperator: $(echo "$operatorlist" | awk -F',' '{print $2}')" 
    fi

    operatornumeric=$(echo "$getprop" | grep '\[gsm.operator.numeric' | awk -F': ' '{print $2}' | sed -e 's/^.//' -e 's/.$//')
    operator1+="\nMCC-MNC: $(echo "$operatornumeric" | awk -F',' '{print $1}')"
    if [[ "$operatorlist" == *","* ]]; then operator2+="\nMCC-MNC: $(echo "$operatornumeric" | awk -F',' '{print $2}')" 
    fi

    operatorcountry=$(echo "$getprop" | grep '\[gsm.operator.iso-country' | awk -F': ' '{print $2}' | sed -e 's/^.//' -e 's/.$//')
    operator1+="\nCountry: $(echo "$operatorcountry" | awk -F',' '{print $1}' | tr '[:lower:]' '[:upper:]')"
    if [[ "$operatorlist" == *","* ]]; then operator2+="\nCountry: $(echo "$operatorcountry" | awk -F',' '{print $2}' | tr '[:lower:]' '[:upper:]')" 
    fi

    operatorconnection=$(echo "$getprop" | grep 'gsm.network.type' | awk -F': ' '{print $2}' | sed -e 's/^.//' -e 's/.$//')
    operator1+="\nConnection Type: $(echo "$operatorconnection" | awk -F',' '{print $1}' | tr '[:lower:]' '[:upper:]')"
    if [[ "$operatorlist" == *","* ]]; then operator2+="\nConnection Type: $(echo "$operatorconnection" | awk -F',' '{print $2}' | tr '[:lower:]' '[:upper:]')" 
    fi

    text="$operator1$operator2"
    echo -e "$text"
}

sim_info_gui() {
    yad --width=250 --title="SIM Card Info" --borders=10 \
        --button="OK":0 --center --text="$(sim_information)"
}

enable_usb_tethering() {
    if [[ "$(adb -s "$adb_code" shell getprop sys.usb.config)" != "rndis"* ]]; then
        echo "Tethering"
        adb -s "$adb_code" shell settings put global tether_dun_required 0
        adb -s "$adb_code" shell svc usb setFunctions rndis
    else
        echo "Untethering"
        adb -s "$adb_code" shell svc usb setFunctions mtp
    fi
}

open_mtp_device() {
    adb -s "$adb_code" shell svc usb setFunctions mtp
    while [ ! -d /run/user/1000/gvfs/*/* ]; do
        echo "Awaiting user to allow access... Retrying in 1 second"
        sleep 1
    done

    xdg-open /run/user/1000/gvfs/*/
}

import_apk() {
    file=$(yad --file --center --width=800 --height=600 --title="Select APK file to import" \
        --file-filter "Android Package Binaries | *.apk")
    exval=$?
    if [[ "$exval" != 0 ]]; then
        exit 0
    fi

    if command -v aapt > /dev/null; then
        packagename=$(aapt dump badging $file | grep "application-label:'" | awk -F"'" '{print $2}')
    else
        packagename=$(basename $file | sed -E 's/^(.{30}).*/\1/')
    fi

    (
        echo "# Installing $packagename on $(get_device_name)"
        adb -s "$adb_code" install "$file" | exit 1
    ) | yad --title="Installing APK"--progress --pulsate --width="250" --center \
            --auto-close --auto-kill --no-buttons --borders=10
}

phone_info() {
    android_version=$(echo "$getprop" | grep 'ro.product.build.version.release\]' | awk -F': ' '{print $2}' | sed -e 's/^.//' -e 's/.$//')
    if [[ "$(phone_type)" == "Samsung"* ]] && [ "$android_version" -gt "8" ]; then
        android_version+=" (One UI $(( $android_version - 8 )))"
    fi
    android_sdk=$(echo "$getprop" | grep 'ro.product.build.version.sdk\]' | awk -F': ' '{print $2}' | sed -e 's/^.//' -e 's/.$//')
    kernel_version=$(echo "$getprop" | grep 'ro.kernel.version' | awk -F': ' '{print $2}' | sed -e 's/^.//' -e 's/.$//')

    cpu_name=$(echo "$getprop" | grep 'ro.hardware\]' | awk -F': ' '{print $2}' | sed -e 's/^.//' -e 's/.$//')
    gpu_name=$(adb -s "$adb_code" shell dumpsys SurfaceFlinger | grep GLES | tail -n1 | awk -F', ' '{print $2}')

    yad --form --window-icon="phone" --image="phone" --title="$device_name" --center \
        --image-on-top --no-buttons --title="About Phone" --width=300 \
        --borders=10 --text="<big><b>About $(get_device_name)</b></big>" \
        --field=":LBL" "" --field="<big><b>Software</b></big>:LBL" "" \
        --field="<b>Android Version:</b> Android $android_version:LBL" "" \
        --field="<b>SDK Level:</b> $android_sdk:LBL" "" \
        --field="<b>Linux Kernel:</b> version $kernel_version:LBL" "" \
        --field=":LBL" "" --field="<big><b>Hardware</b></big>:LBL" "" \
        --field="<b>CPU:</b> $cpu_name:LBL" "" \
        --field="<b>GPU:</b> $gpu_name:LBL" "" 
}

export -f get_device_name screen_mirror phone_type sim_information sim_info_gui 
export -f enable_usb_tethering open_mtp_device import_apk phone_info